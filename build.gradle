plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jooq.jooq-codegen-gradle' version '3.19.13'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// JOOQ実行時に必要な依存関係をjooqRuntimeに追加
	implementation 'org.jooq:jooq:3.19.11'
	implementation 'org.jooq:jooq-meta:3.19.11'
	implementation 'org.jooq:jooq-codegen:3.19.11'
	implementation 'org.jooq:jooq-postgres-extensions:3.19.11'
	runtimeOnly 'org.postgresql:postgresql:42.7.4'
	jooqCodegen 'org.postgresql:postgresql:42.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}


jooq {
	version = '3.19.13'
	configuration {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/mydatabase'
			user = 'myuser'
			password = 'secret'
		}
		generator {
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
				includes = ".*"
			}
			generate {
				relations = true
				records = true
				pojos = true
			}
			target {
				packageName = 'org.example.db'
			}
		}
	}
}

sourceSets.main {
	java.srcDirs("build/generated-sources/jooq")
}
//tasks.named('test') {
//	useJUnitPlatform()
//}
